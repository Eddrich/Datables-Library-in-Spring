package com.inuajamii.test.datatables;

/**
 * Created by Edudev on 5/17/2017.
 */
public interface DataTableNewInterface {

    /**
     * When one just wants to return an empty result set
     *
     * @return  Map<String, Object>
     */
    public Object emptyResultSet();

    /**
     * Indicate whether we have prepared a native sql statement
     *
     * @param   state
     * @return  DataTableNewInterface
     */
    public DataTableNewInterface nativeSQL(boolean state);

    /**
     * Called to re-initialise the parameters as the class is ever on
     */

    /**
     * Specify the columns that will appear in the final result set in order to
     * assist this class in building the information needed to render the
     * datatable result map
     *
     * @param   select
     * @return  DataTableNewInterface
     */
    public DataTableNewInterface select(String select);

    /**
     * Specify the tables where the information will be fetched from i.e. the
     * parent table and all the respective joins
     *
     * @param   from
     * @return  DataTableNewInterface
     */
    public DataTableNewInterface from(String from);

    /**
     * Specify the conditions that will be applied to the query. This will help
     * in building the filter used by datatables
     *
     * @param   where
     * @return  DataTableNewInterface
     */
    public DataTableNewInterface where(String where);

    /**
     * Apply the join clause in order to include LEFT JOINS in the query
     * functions
     *
     * @param   join
     * @return  DataTableNewInterface
     */
    public DataTableNewInterface join(String join);

    /**
     * Apply the group by clause in order to properly support the aggregate 
     * functions
     *
     * @param   groupBy
     * @return  DataTableNewInterface
     */
    public DataTableNewInterface groupBy(String groupBy);


    /**
     * Set the parameter bound to the parameterised query passed in the
     * conditions
     *
     * @param   key
     * @param   value
     * @return  DataTableInterface
     */
    public DataTableNewInterface setParameter(String key, Object value);


    /**
     * Render the table
     *
     *
     */
     public Object showTable();

    /**
     * Set the formatter that will be used to format the response generated by 
     * the class
     *
     * @param   formatter
     * @return  DataTableNewInterface
     */
    //public DataTableNewInterface setFormatter(RowFormatInterface formatter);

    /**
     * Set the parameter bound to the parameterised query passed in the
     * conditions
     *
     * @param   key
     * @param   value
     * @return  DataTableNewInterface
     */
    //public DataTableNewInterface setParameter(String key, Object value);



}
